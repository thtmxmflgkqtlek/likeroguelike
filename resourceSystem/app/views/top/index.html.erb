  <script type="text/javascript">
</script>

<!--
  <%= link_to "ユーザー確認へ",users_path ,class: 'btn btn-default'%><br>
  <%= link_to "資材一覧へ",:rentals ,class: 'btn btn-default'%>
-->

<script >
function Unit(name,maxHp,hp,atk,def,x,y){
  this.name = name;   this.maxHp = maxHp;   this.hp=hp;
  this.atk=atk;    this.def=def;
  this.x=x;      this.y=y;

  this.setStatus = function(hp,atk,def){
    this.hp=hp;      this.atk=atk;      this.def=def;
  }
  this.getStatus = function(){
    return this.hp+" / "+this.atk+" / "+this.def;
  }
  this.attacked = function(damage){
    this.hp -= damage - this.def;
    return damage - this.def;
  }
}

var mapSource = [        [1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1],
                         [1,0,0,1,1, 0,0,0,1,1, 0,0,0,0,1, 1,1],
                         [1,0,0,1,1, 0,0,0,1,1, 0,0,0,0,0, 1,1],
                         [1,0,0,0,0, 0,0,0,1,1, 0,0,0,0,0, 0,1],
                         [1,0,0,0,0, 0,0,0,1,1, 0,0,2,0,0, 0,1],

                         [1,0,0,0,0, 0,0,5,0,0, 0,0,1,0,0, 2,1],
                         [1,0,0,0,0, 0,0,0,0,0, 0,0,1,0,0, 0,1],
                         [1,0,0,0,0, 0,5,2,5,0, 0,0,1,0,0, 0,4],
                         [1,0,0,0,0, 0,0,5,0,0, 0,0,1,0,0, 0,1],
                         [1,0,0,0,0, 0,0,0,0,0, 0,0,1,1,1, 1,1],

                         [1,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,1],
                         [1,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,1],
                         [1,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,1],
                         [1,0,2,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,1],
                         [1,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,1],

                         [1,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,1],
                         [1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1]];
                         var isOnBattle = false;
                         var itemGetCount = 0;
                         var player = new Unit("YOU",30,30,10,5,7,6);
                         var enemys = [new Unit("mob1",20,20,8,3,2,2),new Unit("mob2",10,10,6,1,15,15)];

                         var imageSize = "30px";

    function generateMapTable(){
      $("#content").append("<table>");
      for(var i=0; i<mapSource.length; i++){
        $("#content").append("<tr>");
        for(var j=0; j<mapSource.length; j++){
          $("#content").append("<td class='mapBlock' id='map"+i+"_"+j+"'></td>");
        }
        $("#content").append("</tr>");
      }
      $("#content").append("</table>");
    }

    function setMapImage(){
      var imagePath = "img/";
      for(var i=0; i<mapSource.length; i++){
        for(var j=0; j<mapSource.length; j++){
          if(mapSource[j][i] === 0){
            $(`#map${j}_${i}`).css("background-image","url('<%= asset_path 'brick.gif'%>')").css("width",imageSize).css("height",imageSize).css("background-position","center");
          }else if(mapSource[j][i] === 1){
            $(`#map${j}_${i}`).css("background-image","url('<%= asset_path 'block.gif'%>')").css("width",imageSize).css("height",imageSize).css("background-position","center");
          }else if(mapSource[j][i] === 2){
            $(`#map${j}_${i}`).css("background-image","url('<%= asset_path 'ItemBox.gif'%>')").css("width",imageSize).css("height",imageSize).css("background-position","center");
          }else if(mapSource[j][i] === 3){
          }else if(mapSource[j][i] === 4){
            $(`#map${j}_${i}`).css("background-image","url('<%= asset_path 'exit.gif'%>')").css("width",imageSize).css("height",imageSize).css("background-position","center");
          }else if(mapSource[j][i] === 5){
            $(`#map${j}_${i}`).css("background-image","url('<%= asset_path 'plants.gif'%>')").css("width",imageSize).css("height",imageSize).css("background-position","center");
        }
      }
    }
  }

    function setPlayerImage(){
      $(`#map${player.y}_${player.x}`).css("background-image","url('<%= asset_path 'mario.gif'%>')").css("width",imageSize).css("height",imageSize).css("background-position","center");
    }
    function setEnemyImage(){
      for(var i=0; i<enemys.length; i++){
      $(`#map${enemys[i].y}_${enemys[i].x}`).css("background-image","url('<%= asset_path 'srime.gif'%>')").css("width",imageSize).css("height",imageSize).css("background-position","center");
      }
    }
    // function setItemImage(){
    //   $(`#map${item_positon_y}_${item_positon_x}`).css("background-image","url('<%= asset_path 'ItemBox.gif'%>')").css("width",imageSize).css("height",imageSize).css("background-position","center");
    // }


    function movePlayer(input){
      if(input === "left"){
        player.x--;
      }else if(input === "up"){
        player.y--;
      }
      else if(input === "right"){
        player.x++;
      }
      else if(input === "down"){
        player.y++;
      }
    }

    function moveEnemy(){
      for(var i=0; i<enemys.length; i++){
      if(Math.abs(enemys[i].x-player.x) > Math.abs(enemys[i].y-player.y)){
        if (enemys[i].x > player.x) {
          if(mapSource[enemys[i].y][enemys[i].x-1] !== 1){
            enemys[i].x--;
          }else if(mapSource[enemys[i].y+1][enemys[i].x] !== 1){
            enemys[i].y++;
          }else if(mapSource[enemys[i].y-1][enemys[i].x] !== 1){
            enemys[i].y--;
          }

        }else if (enemys[i].x < player.x) {
          if(mapSource[enemys[i].y][enemys[i].x+1] !== 1){
            enemys[i].x++;
          }else if(mapSource[enemys[i].y+1][enemys[i].x] !== 1){
            enemys[i].y++;
          }else if(mapSource[enemys[i].y-1][enemys[i].x] !== 1){
            enemys[i].y--;
          }
        }
      }else{
        if (enemys[i].y > player.y) {
          if(mapSource[enemys[i].y-1][enemys[i].x] !== 1){
            enemys[i].y--;
          }else if(mapSource[enemys[i].y][enemys[i].x+1] !== 1){
            enemys[i].x++;
          }else if(mapSource[enemys[i].y][enemys[i].x-1] !== 1){
            enemys[i].x--;
          }

        }else if (enemys[i].y < player.y) {
          if(mapSource[enemys[i].y+1][enemys[i].x] !== 1){
            enemys[i].y++;
          }else if(mapSource[enemys[i].y][enemys[i].x+1] !== 1){
            enemys[i].x++;
          }else if(mapSource[enemys[i].y][enemy_position_x-1] !== 1){
            enemy_position_x--;
          }
        }
      }
    }
  }

    function renderText(){
      $("#HP").text(`HP:${player.hp}/${player.maxHp}`);
      $("#ATK").text(`ATK:${player.atk}`);
      $("#DEF").text(`DEF:${player.def}`);
      $("#itemGetCount").text(`入手した宝箱の数:${itemGetCount}`);
    }

    function battleProcess(){
      for(var i=0; enemys.length; i++){
        if(Math.abs(player.x-enemys[i].x) <= 1 && Math.abs(player.y-enemys[i].y) === 0
         || Math.abs(player.x-enemys[i].x) === 0 && Math.abs(player.y-enemys[i].y) <= 1){
           $("#Text").append(`<p>${player.name}'s attack! ${enemys[i].name} taken ${enemys[i].attacked(player.atk)} damage! </p>`);
           if(enemys[i].hp <= 0){ //killed mob
             $("#Text").append(`<p>${enemys[i].name} was dead! </p>`);
             $(`#map${enemys[i].y}_${enemys[i].x}`).css("background-image","url('<%= asset_path 'mario.gif'%>')").css("width",imageSize).css("height",imageSize).css("background-position","center");
             enemys.splice(i,1);  //delete enemys[i]
             isOnBattle = false;

           }else{
             $("#Text").append(`<p>${enemys[i].name}'s attack! ${player.name} taken ${player.attacked(enemys[i].atk)} damage! </p>`);
             renderText();
             if(player.hp <= 0){  //gameover!
               $("#Text").append(`<p>${player.name} was dead! </p>`);
             }
           }
         }
      }
    }

    function closeToCombat(){
      for(var i=0; i<enemys.length; i++){
        if(Math.abs(player.x-enemys[i].x) <= 1 && Math.abs(player.y-enemys[i].y) === 0
         || Math.abs(player.x-enemys[i].x) === 0 && Math.abs(player.y-enemys[i].y) <= 1){
           alert("!");
          isOnBattle = true;
        }
      }
    }

    $(function(){
      $("#left").click(function(){
        if(isOnBattle){
          battleProcess();
        }else{
          if(mapSource[player.y][player.x-1] !== 1){
            setMapImage();
            moveEnemy();
            movePlayer("left");
            setPlayerImage();
            setEnemyImage();
            closeToCombat();
          }
        }
        if (mapSource[player.y][player.x] === 2) {
          $("#Text").append(`アイテムを取得しました。<br>`);
          mapSource[player.y][player.x] = 0;
          itemGetCount++;
          renderText();
        }
        if (mapSource[player_position_y][player_position_x] === 4) {
          if (mapSource[player.y][player.x] === 5) {
            $("#Text").append(`薬草を取得しました。HPが回復します。<br>`);
            mapSource[player.y][player.x] = 0;
            renderText();
          }
          if (mapSource[player_position_y][player_position_x] === 4) {
            if (window.confirm('次のマップにいきますか？')) {
            			//  location.href = "hoge.php";
                  $("#itemGetCount").attr("value",itemGetCount);
                  $('#form').submit();
                } else {
            			// hogehoge
            		}
              }
      });

      $("#up").click(function(){
        if(isOnBattle){
          battleProcess();
        }else{
          if(mapSource[player.y-1][player.x] !== 1){
            setMapImage();
            moveEnemy();
            movePlayer("up");
            setPlayerImage();
            setEnemyImage();
            closeToCombat();
          }
        }
        if (mapSource[player.y][player.x] === 2) {
          $("#Text").append(`アイテムを取得しました。<br>`);
          mapSource[player.y][player.x] = 0;
          itemGetCount++;
          renderText();
        }
        if (mapSource[player.y][player.x] === 5) {
          $("#Text").append(`薬草を取得しました。HPが回復します。<br>`);
          mapSource[player.y][player.x] = 0;
          renderText();
        }
        if (mapSource[player_position_y][player_position_x] === 4) {
          if (window.confirm('次のマップにいきますか？')) {
          			//  location.href = "hoge.php";
                $("#itemGetCount").attr("value",itemGetCount);
                $('#form').submit();

          		} else {
          			// hogehoge
          		}}
      });

      $("#right").click(function(){
        if(isOnBattle){
          battleProcess();
        }else{
          if(mapSource[player.y][player.x+1] !== 1){
            setMapImage();
            moveEnemy();
            movePlayer("right");
            setPlayerImage();
            setEnemyImage();
            closeToCombat();
          }
        }
        if (mapSource[player.y][player.x] === 2) {
          $("#Text").append(`アイテムを取得しました。<br>`);
          mapSource[player.y][player.x] = 0;
          itemGetCount++;
          renderText();
        }
        if (mapSource[player.y][player.x] === 5) {
          $("#Text").append(`薬草を取得しました。HPが回復します。<br>`);
          mapSource[player.y][player.x] = 0;
          renderText();
        }
        if (mapSource[player.y][player.x] === 4) {
          if (window.confirm('次のマップにいきますか？')) {
          			//  location.href = "hoge.php";
                $("#itemGetCount").attr("value",itemGetCount);
                $('#form').submit();

          		} else {
          			// hogehoge
          		}}
      });

      $("#down").click(function(){
        if(isOnBattle){
          battleProcess();
        }else{
          if(mapSource[player.y+1][player.x] !== 1){
            setMapImage();
            moveEnemy();
            movePlayer("down");
            setPlayerImage();
            setEnemyImage();
            closeToCombat();
          }
        }
        if (mapSource[player.y][player.x] === 2) {
          $("#Text").append(`アイテムを取得しました。<br>`);
          mapSource[player.y][player.x] = 0;
          itemGetCount++;
          renderText();
        }
        if (mapSource[player.y][player.x] === 5) {
          $("#Text").append(`薬草を取得しました。HPが回復します。<br>`);
          mapSource[player.y][player.x] = 0;
          renderText();
        }
        if (mapSource[player_position_y][player_position_x] === 4) {
          if (window.confirm('次のマップにいきますか？')) {
          			//  location.href = "hoge.php";
                $("#itemGetCount").attr("value",itemGetCount);
                $('#form').submit();

          		} else {
          			// hogehoge
          		}}
      });
      //onLoad
      generateMapTable();
      setMapImage();
      setPlayerImage();
      setEnemyImage();
      renderText();
    });
  });

    </script>

    <title>メイン画面</title>
  </head>

  <body>
    <table>
      <tr>
        <td>
    <div class="content" id="content">

    </div>

        </td>
      </tr>
      <tr>
        <td>
    <div class="ui" id=ui>
      <button type="button" name="button" id=left>←</button>
      <button type="button" name="button" id=up>↑</button>
      <button type="button" name="button" id=right>→</button>
      <button type="button" name="button" id=down>↓</button>
    </div>

    <div class="SystemText" id="SystemText">
      <div class="HP" id="HP">
      </div>
      <div class="ATK" id="ATK">
      </div>
      <div class="DEF" id="DEF">
      </div>
      <form class="form" id="form" action="/weapon/index" method="post">
        <div class="itemCount" id="itemCount">
        </div>
        <input type="hidden" id="itemGetCount" name="itemGetCount" value=0>
      </form>
      <div class="Text" id="Text">
      </div>
    </div>
    </td>
  </tr>
</table>
