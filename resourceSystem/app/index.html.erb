<script type="text/javascript"></script>

<div class="text-center">
  <h1>資材管理システムへようこそ！</h1>
  <p>ユーザーログインと資材を予約してください！</p>

  <%= link_to "ユーザー確認へ",users_path ,class: 'btn btn-default'%><br>
  <%= link_to "資材一覧へ",:rentals ,class: 'btn btn-default'%>
</div>

<script >
function Unit(name,maxHp,hp,atk,def,x,y,sight,image){
  this.name = name;   this.maxHp = maxHp;   this.hp=hp;
  this.atk=atk;    this.def=def;
  this.x=x;      this.y=y;    this.sight=sight;   this.image=image;

  this.attacked = function(damage){
    this.hp -= damage - this.def;
    return damage - this.def;
  }
}

var mapSource = [        [1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1],
[1,0,0,1,1, 0,0,0,1,1, 0,0,0,0,1, 1,1],
[1,0,0,1,1, 0,0,0,1,1, 0,0,0,0,0, 1,1],
[1,0,0,0,0, 0,0,0,1,1, 0,0,0,0,0, 0,1],
[1,0,0,0,0, 0,0,0,1,1, 0,0,2,0,0, 0,1],

[1,0,0,0,0, 0,0,5,0,0, 0,0,1,0,0, 2,1],
[1,0,0,0,0, 0,0,0,0,0, 0,0,1,0,0, 0,1],
[1,0,0,0,0, 0,5,2,5,0, 0,0,1,0,0, 0,4],
[1,0,0,0,0, 0,0,5,0,0, 0,0,1,0,0, 0,1],
[1,0,0,0,0, 0,0,0,0,0, 0,0,1,1,1, 1,1],

[1,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,1],
[1,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,1],
[1,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,1],
[1,0,2,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,1],
[1,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,1],

[1,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,1],
[1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1]];

var isOnBattle = false;
var itemGetCount = 0;
var player = new Unit("YOU",30,30,10,5,7,6,4,"<%= asset_path 'mario.gif'%>");
var enemys = [new Unit("mob1",20,20,8,3,2,2,10,"<%= asset_path 'srime.gif'%>"),
new Unit("mob2",10,10,6,1,15,15,10,"<%= asset_path 'ItemBox.gif'%>")];
var imageSize = "30px";


function generateMapTable(){
  $("#content").append("<table>");
  for(var i=0; i<mapSource.length; i++){
    $("#content").append("<tr>");
    for(var j=0; j<mapSource.length; j++){
      $("#content").append("<td class='mapBlock' id='map"+i+"_"+j+"'></td>");
    }
    $("#content").append("</tr>");
  }
  $("#content").append("</table>");
}



function setMapImage(){
  for(var i=0; i<mapSource.length; i++){
    for(var j=0; j<mapSource.length; j++){
      if(mapSource[j][i] === 0){
        $(`#map${j}_${i}`).css("background-image","url('<%= asset_path 'brick.gif'%>')").css("width",imageSize).css("height",imageSize).css("background-position","center");
      }else if(mapSource[j][i] === 1){
        $(`#map${j}_${i}`).css("background-image","url('<%= asset_path 'block.gif'%>')").css("width",imageSize).css("height",imageSize).css("background-position","center");
      }else if(mapSource[j][i] === 2){
        $(`#map${j}_${i}`).css("background-image","url('<%= asset_path 'ItemBox.gif'%>')").css("width",imageSize).css("height",imageSize).css("background-position","center");
      }else if(mapSource[j][i] === 3){
      }else if(mapSource[j][i] === 4){
        $(`#map${j}_${i}`).css("background-image","url('<%= asset_path 'exit.gif'%>')").css("width",imageSize).css("height",imageSize).css("background-position","center");
      }else if(mapSource[j][i] >= 10){
        $(`#map${j}_${i}`).css("background-image","url('<%= asset_path 'ItemBox.gif'%>')").css("width",imageSize).css("height",imageSize).css("background-position","center");
      }
    }
  }
}
function sightProcess(){

  for(var i=0; i<mapSource.length; i++){
    for(var j=0; j<mapSource.length; j++){

      if(Math.abs(player.x-i)+Math.abs(player.y-j) > player.sight){ // inside of sight
        if(mapSource[j][i] < 10){
          mapSource[j][i] += 10;
        }
      }else{ //outside of sight
        if(mapSource[j][i] >= 10){
          mapSource[j][i] -= 10;
        }
      }
    }
  }
}

function setPlayerImage(){
  $(`#map${player.y}_${player.x}`).css("background-image",`url('${player.image}')`).css("width",imageSize).css("height",imageSize).css("background-position","center");
}
function setEnemyImage(){
  for(var i=0; i<enemys.length; i++){

    if(Math.abs(player.x-enemys[i].x)+Math.abs(player.y-enemys[i].y) < player.sight){
      $(`#map${enemys[i].y}_${enemys[i].x}`).css("background-image",`url('${enemys[i].image}')`).css("width",imageSize).css("height",imageSize).css("background-position","center");
    }
  }
}

function movePlayer(input){
  if(input === "left"){
    player.x--;
  }else if(input === "up"){
    player.y--;
  }
  else if(input === "right"){
    player.x++;
  }
  else if(input === "down"){
    player.y++;
  }
}
function moveEnemy(){
  for(var i=0; i<enemys.length; i++){
    if(Math.abs(player.x-enemys[i].x)+Math.abs(player.y-enemys[i].y) < enemys[i].sight){ //inside of sight of enemy
      if(Math.abs(enemys[i].x-player.x) > Math.abs(enemys[i].y-player.y)){
        if (enemys[i].x > player.x) {
          if(mapSource[enemys[i].y][enemys[i].x-1] %10 !== 1){
            enemys[i].x--;
          }else if(mapSource[enemys[i].y+1][enemys[i].x] %10 !== 1){
            enemys[i].y++;
          }else if(mapSource[enemys[i].y-1][enemys[i].x] %10 !== 1){
            enemys[i].y--;
          }

        }else if (enemys[i].x < player.x) {
          if(mapSource[enemys[i].y][enemys[i].x+1] %10 !== 1){
            enemys[i].x++;
          }else if(mapSource[enemys[i].y+1][enemys[i].x] %10 !== 1){
            enemys[i].y++;
          }else if(mapSource[enemys[i].y-1][enemys[i].x] %10 !== 1){
            enemys[i].y--;
          }
        }
      }else{
        if (enemys[i].y > player.y) {
          if(mapSource[enemys[i].y-1][enemys[i].x] %10 !== 1){
            enemys[i].y--;
          }else if(mapSource[enemys[i].y][enemys[i].x+1] %10 !== 1){
            enemys[i].x++;
          }else if(mapSource[enemys[i].y][enemys[i].x-1] %10 !== 1){
            enemys[i].x--;
          }

        }else if (enemys[i].y < player.y) {
          if(mapSource[enemys[i].y+1][enemys[i].x] %10 !== 1){
            enemys[i].y++;
          }else if(mapSource[enemys[i].y][enemys[i].x+1] %10 !== 1){
            enemys[i].x++;
          }else if(mapSource[enemys[i].y][enemys[i].x-1] %10 !== 1){
            enemys[i].x--;
          }
        }
      }
    }
  }
}
function renderText(){
  $("#HP").text(`HP:${player.hp}/${player.maxHp}`);
  $("#ATK").text(`ATK:${player.atk}`);
  $("#DEF").text(`DEF:${player.def}`);
  $("#itemGetCount").text(`入手した宝箱の数:${itemGetCount}`);
}
function battleProcess(){
  for(var i=0; i<enemys.length; i++){
    if(Math.abs(player.x-enemys[i].x) <= 1 && Math.abs(player.y-enemys[i].y) === 0
    || Math.abs(player.x-enemys[i].x) === 0 && Math.abs(player.y-enemys[i].y) <= 1){
      $("#Text").append(`<p>${player.name}'s attack! ${enemys[i].name} taken ${enemys[i].attacked(player.atk)} damage! </p>`);
      if(enemys[i].hp <= 0){ //killed mob
        $("#Text").append(`<p>${enemys[i].name} was dead! </p>`);
        $(`#map${enemys[i].y}_${enemys[i].x}`).css("background-image","url('<%= asset_path 'mario.gif'%>')").css("width",imageSize).css("height",imageSize).css("background-position","center");
        enemys.splice(i,1);  //delete enemys[i]
        isOnBattle = false;

      }else{
        $("#Text").append(`<p>${enemys[i].name}'s attack! ${player.name} taken ${player.attacked(enemys[i].atk)} damage! </p>`);
        renderText();
        if(player.hp <= 0){  //gameover!
          $("#Text").append(`<p>${player.name} was dead! </p>`);
        }
      }
    }
  }
}
function closeToCombat(){
  for(var i=0; i<enemys.length; i++){
    if(Math.abs(player.x-enemys[i].x) <= 1 && Math.abs(player.y-enemys[i].y) === 0
    || Math.abs(player.x-enemys[i].x) === 0 && Math.abs(player.y-enemys[i].y) <= 1){
      alert("!");
      isOnBattle = true;
    }
  }
}
$(function(){
  $(".moveKey").click(function(key){
    if(isOnBattle){
      battleProcess();
    }else{
      if(mapSource[player.y][player.x-1] %10 !== 1){  //進行方向に壁がなければ進む
        moveEnemy();
        movePlayer(key);
        sightProcess();
        setMapImage();
        setPlayerImage();
        setEnemyImage();
        closeToCombat();
      }
    }

    if (mapSource[player.y][player.x] === 2) {
      $("#Text").append(`アイテムを取得しました。<br>`);
      mapSource[player.y][player.x] = 0;
      itemGetCount++;
      renderText();
    }
    if (mapSource[player.y][player.x] === 5) {
      $("#Text").append(`薬草を取得しました。HPが回復します。<br>`);
      mapSource[player.y][player.x] = 0;
      renderText();
    }
    if (mapSource[player.y][player.x] === 4) {
      if (window.confirm('次のマップにいきますか？')) {
        //  location.href = "hoge.php";
        $("#itemGetCount").attr("value",itemGetCount);
        $('#form').submit();

      } else {
        // hogehoge
      }}

    });






      });

      </script>
      <title></title>
    </head>
    <body>
      <div class="content" id="content">

      </div>
      <div class="ui" id=ui>
        divdivdiv
        <button type="button" class="moveKey" name="button" id=left>←aa</button>
        <button type="button" class="moveKey" name="button" id=up>↑</button>
        <button type="button" class="moveKey" name="button" id=right>→</button>
        <button type="button" class="moveKey" name="button" id=down>↓</button>
      </div>

      <div class="SystemText" id="SystemText">
        <div class="HP" id="HP">
        </div>
        <div class="ATK" id="ATK">
        </div>
        <div class="DEF" id="DEF">
        </div>
        <form class="form"  id="form" action="http://localhost:3000/weapon/index" method="get">
          <div class="itemCount" id="itemCount">
          </div>
          <input type="hidden" id="itemGetCount" name="itemGetCount" value=0>
        </form>
        <div class="Text" id="Text">
        </div>
      </div>
